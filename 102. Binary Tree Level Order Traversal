// https://leetcode.com/problems/binary-tree-level-order-traversal/

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        helper(root, 0, ans);
        return ans;
    }
    
    private void helper(TreeNode n, int level, List<List<Integer>> list) {
        if(n == null)
            return;
        if(list.size()-1 < level) // subtract 1 from list.size() to ensure we add a list when level == 0
            list.add(new ArrayList<Integer>());
        list.get(level).add(n.val);
        helper(n.left, level + 1, list);
        helper(n.right, level + 1, list);
    }
}
